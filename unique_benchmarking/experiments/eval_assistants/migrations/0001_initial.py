# Generated by Django 5.2.6 on 2025-09-21 17:01

import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Experiment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "experiment_id",
                    models.CharField(db_index=True, max_length=100, unique=True),
                ),
                (
                    "assistant_ids",
                    models.JSONField(
                        default=list, help_text="List of assistant IDs tested"
                    ),
                ),
                ("user_id", models.CharField(help_text="User ID", max_length=100)),
                (
                    "company_id",
                    models.CharField(help_text="Company ID", max_length=100),
                ),
                (
                    "queries",
                    models.JSONField(default=list, help_text="List of queries tested"),
                ),
                ("start_time", models.DateTimeField(default=django.utils.timezone.now)),
                ("end_time", models.DateTimeField(blank=True, null=True)),
            ],
            options={
                "ordering": ["-start_time"],
            },
        ),
        migrations.CreateModel(
            name="GoldenAnswer",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "model_name",
                    models.CharField(
                        help_text="Model used to generate the answer", max_length=100
                    ),
                ),
                (
                    "question_hash",
                    models.CharField(db_index=True, max_length=64, unique=True),
                ),
                ("question", models.TextField()),
                ("answer", models.TextField()),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("started_at", models.DateTimeField(blank=True, null=True)),
                ("ended_at", models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="AssistantResponse",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("question", models.TextField()),
                ("assistant_id", models.CharField(max_length=100)),
                ("answer", models.TextField(blank=True, null=True)),
                (
                    "hallucination_level",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("hallucination_reason", models.TextField(blank=True, null=True)),
                ("references", models.JSONField(blank=True, default=list, null=True)),
                ("success", models.BooleanField()),
                ("started_at", models.DateTimeField(blank=True, null=True)),
                ("ended_at", models.DateTimeField(blank=True, null=True)),
                (
                    "experiment",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="responses",
                        to="eval_assistants.experiment",
                    ),
                ),
                (
                    "golden_answer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="eval_assistants.goldenanswer",
                    ),
                ),
            ],
            options={
                "unique_together": {("experiment", "golden_answer", "assistant_id")},
            },
        ),
    ]
